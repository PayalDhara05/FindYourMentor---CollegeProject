@model FindYourMentorProject.Models.Application

@{
    var Mentee = ViewBag.User;
    var appln = ViewBag.Application;
}

@if (ViewBag.status == "Applied")
{
    <div class="submitted-appln">
        <h3>You have already applied for the course. Below is your submitted application</h3>
        <div class="Indiv-form-elem">
            @Html.LabelFor(model => model.MenteeName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="Indiv-form-text">
                @Html.EditorFor(model => model.MenteeName, new { htmlAttributes = new { @Value = (@Mentee.FirstName + Mentee.LastName), @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.MenteeName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="Indiv-form-elem">
            @Html.LabelFor(model => model.MenteeEmailID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="Indiv-form-text">
                @Html.EditorFor(model => model.MenteeEmailID, new { htmlAttributes = new { @Value = @Mentee.EmailID, @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.MenteeEmailID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="Indiv-form-elem">
            @Html.LabelFor(model => model.MenteeContactNo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="Indiv-form-text">
                @Html.EditorFor(model => model.MenteeContactNo, new { htmlAttributes = new { @Value = @Mentee.ContactNo, @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.MenteeContactNo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="Indiv-form-elem">
            @Html.LabelFor(model => model.MenteeAge, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="Indiv-form-text">
                @Html.EditorFor(model => model.MenteeAge, new { htmlAttributes = new { @Value = @Mentee.Age, @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.MenteeAge, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="Indiv-form-elem">
            @Html.LabelFor(model => model.MenteeAddress, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="Indiv-form-text">
                @Html.EditorFor(model => model.MenteeAddress, new { htmlAttributes = new { @Value = @Mentee.Address, @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.MenteeAddress, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="Indiv-form-elem">
            @Html.LabelFor(model => model.MenteeState, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="Indiv-form-text">
                @Html.EditorFor(model => model.MenteeState, new { htmlAttributes = new { @Value = @Mentee.State, @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.MenteeState, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="Indiv-form-elem">
            @Html.LabelFor(model => model.MenteeLinkedin, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="Indiv-form-text">
                @Html.EditorFor(model => model.MenteeLinkedin, new { htmlAttributes = new { @Value = @Mentee.LinkedInID, @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.MenteeLinkedin, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="Indiv-form-elem">
            @Html.LabelFor(model => model.MenteeGithub, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="Indiv-form-text">
                @Html.EditorFor(model => model.MenteeGithub, new { htmlAttributes = new { @Value = @Mentee.GitHubID, @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.MenteeGithub, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="Indiv-form-elem">
            @Html.LabelFor(model => model.MenteeMessage, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="Indiv-form-text">
                @Html.EditorFor(model => model.MenteeMessage, new { htmlAttributes = new { @Value = @appln.MenteeMessage, @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.MenteeMessage, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="Indiv-form-elem">
            @Html.LabelFor(model => model.MenteeBackground, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="Indiv-form-text">
                @Html.EditorFor(model => model.MenteeBackground, new { htmlAttributes = new { @Value = @appln.MenteeBackground, @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.MenteeBackground, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="Indiv-form-elem">
            @Html.LabelFor(model => model.MenteeExpectations, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="Indiv-form-text">
                @Html.EditorFor(model => model.MenteeExpectations, new { htmlAttributes = new { @Value = @appln.MenteeExpectations, @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.MenteeExpectations, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="Indiv-form-elem">
            @Html.LabelFor(model => model.AppliedTime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="Indiv-form-text">
                @Html.EditorFor(model => model.AppliedTime, new { htmlAttributes = new { @Value = @appln.AppliedTime, @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.AppliedTime, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="Indiv-form-elem">
            @Html.LabelFor(model => model.WorkingStatus, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="Indiv-form-text">
                @Html.EditorFor(model => model.WorkingStatus, new { htmlAttributes = new { @Value = @appln.WorkingStatus, @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.AppliedTime, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
}
else
{
    using (Html.BeginForm("SubmitApppliedCourse", "Student", FormMethod.Post, new { onSubmit = "return SubmitForm(this)" }))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">

            @Html.TextBoxFor(m => m.AdvertisementID, new { @Value = @ViewBag.Message, @type = "hidden" })

            <div class="Indiv-form-elem">
                @Html.LabelFor(model => model.MenteeName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="Indiv-form-text">
                    @Html.EditorFor(model => model.MenteeName, new { htmlAttributes = new { @Value = (@Mentee.FirstName + Mentee.LastName), @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
                    @Html.ValidationMessageFor(model => model.MenteeName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="Indiv-form-elem">
                @Html.LabelFor(model => model.MentorEmailID, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="Indiv-form-text">
                    @Html.EditorFor(model => model.MentorEmailID, new { htmlAttributes = new { @Value = @Mentee.EmailID, @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
                    @Html.ValidationMessageFor(model => model.MentorEmailID, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="Indiv-form-elem">
                @Html.LabelFor(model => model.MenteeContactNo, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="Indiv-form-text">
                    @Html.EditorFor(model => model.MenteeContactNo, new { htmlAttributes = new { @Value = @Mentee.ContactNo, @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
                    @Html.ValidationMessageFor(model => model.MenteeContactNo, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="Indiv-form-elem">
                @Html.LabelFor(model => model.MenteeAge, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="Indiv-form-text">
                    @Html.EditorFor(model => model.MenteeAge, new { htmlAttributes = new { @Value = @Mentee.Age, @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
                    @Html.ValidationMessageFor(model => model.MenteeAge, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="Indiv-form-elem">
                @Html.LabelFor(model => model.MenteeAddress, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="Indiv-form-text">
                    @Html.EditorFor(model => model.MenteeAddress, new { htmlAttributes = new { @Value = @Mentee.Address, @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
                    @Html.ValidationMessageFor(model => model.MenteeAddress, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="Indiv-form-elem">
                @Html.LabelFor(model => model.MenteeState, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="Indiv-form-text">
                    @Html.EditorFor(model => model.MenteeState, new { htmlAttributes = new { @Value = @Mentee.State, @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
                    @Html.ValidationMessageFor(model => model.MenteeState, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="Indiv-form-elem">
                @Html.LabelFor(model => model.MenteeLinkedin, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="Indiv-form-text">
                    @Html.EditorFor(model => model.MenteeLinkedin, new { htmlAttributes = new { @Value = @Mentee.LinkedInID, @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
                    @Html.ValidationMessageFor(model => model.MenteeLinkedin, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="Indiv-form-elem">
                @Html.LabelFor(model => model.MenteeGithub, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="Indiv-form-text">
                    @Html.EditorFor(model => model.MenteeGithub, new { htmlAttributes = new { @Value = @Mentee.GitHubID, @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
                    @Html.ValidationMessageFor(model => model.MenteeGithub, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="Indiv-form-elem">
                @Html.LabelFor(model => model.MenteeMessage, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="Indiv-form-text">
                    @Html.EditorFor(model => model.MenteeMessage, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.MenteeMessage, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="Indiv-form-elem">
                @Html.LabelFor(model => model.MenteeBackground, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="Indiv-form-text">
                    @Html.EditorFor(model => model.MenteeBackground, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.MenteeBackground, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="Indiv-form-elem">
                @Html.LabelFor(model => model.MenteeExpectations, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="Indiv-form-text">
                    @Html.EditorFor(model => model.MenteeExpectations, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.MenteeExpectations, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="radio-elem">
                @Html.LabelFor(model => model.WorkingStatus, htmlAttributes: new { @class = "radio-label" })
                @Html.ValidationMessageFor(model => model.WorkingStatus, "", new { @class = "text-danger" })
                <div class="Indiv-form-radio">
                    @Html.RadioButtonFor(model => model.WorkingStatus, "Student")<span>Student</span><br />

                    @Html.RadioButtonFor(model => model.WorkingStatus, "Employed")<span>Employed</span><br />

                    @Html.RadioButtonFor(model => model.WorkingStatus, "Unemployed")<span>Unemployed</span><br />
                </div>
            </div>

            <div class="Indiv-form-elem">
                <input type="submit" value="SUBMIT APPLICATION" class="supply-appln" />
            </div>
        </div>
    }

}
