@model FindYourMentorProject.Models.Fee

<link href="~/Custom/css/StudentIndex.css" rel="stylesheet" />

@if (ViewBag.status == "Paid")
{
<div class="submitted-appln">
    <h3>You have already filled this form. Below is your submitted application form</h3>
    <div class="Indiv-form-elem">
        @Html.LabelFor(model => model.MenteeName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="Indiv-form-text">
            @Html.EditorFor(model => model.MenteeName, new { htmlAttributes = new { @Value = ViewBag.Mentee, @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
            @Html.ValidationMessageFor(model => model.MenteeName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="Indiv-form-elem">
        @Html.LabelFor(model => model.MenteeEmailID, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="Indiv-form-text">
            @Html.EditorFor(model => model.MenteeEmailID, new { htmlAttributes = new { @Value = ViewBag.EmailID, @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
            @Html.ValidationMessageFor(model => model.MenteeEmailID, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="Indiv-form-elem">
        @Html.LabelFor(model => model.MenteeContactNo, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="Indiv-form-text">
            @Html.EditorFor(model => model.MenteeContactNo, new { htmlAttributes = new { @Value = ViewBag.Contact, @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
            @Html.ValidationMessageFor(model => model.MenteeContactNo, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="Indiv-form-elem">
        @Html.LabelFor(model => model.MenteeAge, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="Indiv-form-text">
            @Html.EditorFor(model => model.MenteeAge, new { htmlAttributes = new { @Value = ViewBag.Age, @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
            @Html.ValidationMessageFor(model => model.MenteeAge, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="Indiv-form-elem">
        @Html.LabelFor(model => model.MenteeGitHub, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="Indiv-form-text">
            @Html.EditorFor(model => model.MenteeGitHub, new { htmlAttributes = new { @Value = ViewBag.Address, @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
            @Html.ValidationMessageFor(model => model.MenteeGitHub, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="Indiv-form-elem">
        @Html.LabelFor(model => model.MenteeLinkedIn, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="Indiv-form-text">
            @Html.EditorFor(model => model.MenteeLinkedIn, new { htmlAttributes = new { @Value = ViewBag.Linkedin, disabled = "disabled", @readonly = "readonly" } })
        </div>
    </div>

    <div class="Indiv-form-elem">
        @Html.LabelFor(model => model.MenteeState, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="Indiv-form-text">
            @Html.EditorFor(model => model.MenteeState, new { htmlAttributes = new { @Value = ViewBag.State, @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
            @Html.ValidationMessageFor(model => model.MenteeState, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="Indiv-form-elem">
        <label>Total fees of this course : <span>@ViewBag.Fees</span> </label>
    </div>

    <div class="Indiv-form-elem">
        @Html.LabelFor(model => model.PaymentMode, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="Indiv-form-text">
            @Html.EditorFor(model => model.PaymentMode, new { htmlAttributes = new { @Value = ViewBag.Mode, disabled = "disabled", @readonly = "readonly", @class = "form-control" } })
        </div>
    </div>

    <div class="Indiv-form-elem">
        @Html.LabelFor(model => model.PaymentStatus, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="Indiv-form-text">
            @Html.EditorFor(model => model.PaymentStatus, new { htmlAttributes = new { @Value = ViewBag.PaymentStatus, @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
            @Html.ValidationMessageFor(model => model.PaymentTime, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="Indiv-form-elem">
        <label>Form filled at </label>
        <div class="Indiv-form-text">
            @Html.EditorFor(model => model.PaymentTime, new { htmlAttributes = new { @Value = ViewBag.PaymentTime, @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
            @Html.ValidationMessageFor(model => model.PaymentTime, "", new { @class = "text-danger" })
        </div>
    </div>

</div>
}
else
{
    using (Html.BeginForm("SubmitFeeApplication", "Student", FormMethod.Post, new { onSubmit = "return SubmitFeeAppln(this)", @id = "fee" }))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">

            @Html.TextBoxFor(m => m.AdvertisementID, new { @Value = @ViewBag.Message, @type = "hidden" })
            <div class="Indiv-form-elem">
                @Html.LabelFor(model => model.MenteeName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="Indiv-form-text">
                    @Html.EditorFor(model => model.MenteeName, new { htmlAttributes = new { @Value = ViewBag.Firstname, @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
                    @Html.ValidationMessageFor(model => model.MenteeName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="Indiv-form-elem">
                @Html.LabelFor(model => model.MentorEmailID, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="Indiv-form-text">
                    @Html.EditorFor(model => model.MentorEmailID, new { htmlAttributes = new { @Value = ViewBag.EmailID, @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
                    @Html.ValidationMessageFor(model => model.MentorEmailID, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="Indiv-form-elem">
                @Html.LabelFor(model => model.MenteeContactNo, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="Indiv-form-text">
                    @Html.EditorFor(model => model.MenteeContactNo, new { htmlAttributes = new { @Value = ViewBag.Contact, @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
                    @Html.ValidationMessageFor(model => model.MenteeContactNo, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="Indiv-form-elem">
                @Html.LabelFor(model => model.MenteeAge, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="Indiv-form-text">
                    @Html.EditorFor(model => model.MenteeAge, new { htmlAttributes = new { @Value = ViewBag.Age, @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
                    @Html.ValidationMessageFor(model => model.MenteeAge, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="Indiv-form-elem">
                @Html.LabelFor(model => model.MenteeState, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="Indiv-form-text">
                    @Html.EditorFor(model => model.MenteeState, new { htmlAttributes = new { @Value = ViewBag.State, @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
                    @Html.ValidationMessageFor(model => model.MenteeState, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="Indiv-form-elem">
                @Html.LabelFor(model => model.MenteeGitHub, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="Indiv-form-text">
                    @Html.EditorFor(model => model.MenteeGitHub, new { htmlAttributes = new { @Value = ViewBag.Address, @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
                    @Html.ValidationMessageFor(model => model.MenteeGitHub, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="Indiv-form-elem">
                @Html.LabelFor(model => model.MenteeLinkedIn, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="Indiv-form-text">
                    @Html.EditorFor(model => model.MenteeLinkedIn, new { htmlAttributes = new { @Value = ViewBag.Linkedin, disabled = "disabled", @readonly = "readonly" } })
                </div>
            </div>


            <div class="Indiv-form-elem">
                <label>Total fees of this course : <span>@ViewBag.Fees</span> </label>
            </div>

            <div class="Indiv-form-elem">
                @Html.LabelFor(model => model.PaymentMode, htmlAttributes: new { @class = "control-label col-md-2" })
                @Html.ValidationMessageFor(model => model.PaymentMode, "", new { @class = "text-danger" })
                <div class="Indiv-form-radio">
                    <input type="radio" name="PaymentMode" id="Offline" value="Offline" onclick="javascript:yesnoCheck();" />
                    @* @Html.RadioButtonFor(model => model.PaymentMode, "Offline", new { htmlAttributes = new { onclick = "javascript:yesnoCheck();", id = "Offline" } }) *@
                    <span>Offline</span><br />
                    @* @Html.RadioButtonFor(model => model.PaymentMode, "Online", new { htmlAttributes = new { onclick = "javascript:yesnoCheck();", id = "Online" } }) *@
                    <input type="radio" name="PaymentMode" id="Online" value="Online" onclick="javascript:yesnoCheck();" />
                    <span>Online</span><br />
                </div>
            </div>

            <div id="ifOnline" style="display:none" class="Indiv-form-elem">
                <div class="Indiv-form-elem-1">
                    <label>Card Type</label>
                    <div class="card-type-select">
                        <input type="radio" checked />
                        <div class="card-img">
                            <img src="~/uiImages/Fees/Visa.png" />
                            <img src="~/uiImages/Fees/Rupay.png" />
                            <img src="~/uiImages/Fees/Mastercard.png" />
                        </div>
                    </div>
                </div>

                <div class="Indiv-form-elem">
                    <label>Card Number</label>
                    <div class="Indiv-form-text">
                        <input name="CardNumber" class="cc-number" type="tel" pattern="\d*" maxlength="19" placeholder="Card Number">
                    </div>
                </div>

                <div class="Indiv-form-elem">
                    <label>Name on Card</label>
                    <div class="Indiv-form-text">
                        @Html.EditorFor(model => model.CardName, new { htmlAttributes = new { @class = "form-control", @placeholder = "Name on your Card" } })
                        @Html.ValidationMessageFor(model => model.CardName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="Indiv-form-elem">
                    <label>CVV</label>
                    <div class="Indiv-form-text">
                        <input name="CVV" class="cc-cvc" pattern="\d*" maxlength="4" placeholder="CVV" type="text" oninput="this.value = this.value.replace(/[^0-9.]/g, '').replace(/(\..*)/g, '');">
                    </div>
                </div>

                <div class="Indiv-form-elem">
                    <label>Expiry Date</label>
                    <div class="Indiv-form-text">
                        <input name="ExpiryDate" class="cc-expires" type="tel" pattern="\d*" maxlength="7" placeholder="MM / YY">
                    </div>
                </div>
            </div>

            <div class="Indiv-form-elem">
                <input type="submit" value="CONFIRM FEE PAYMENT" class="supply-appln" />
            </div>

        </div>
    }
}
<script type="text/javascript">

    function yesnoCheck() {
        if (document.getElementById('Online').checked) {
            document.getElementById('ifOnline').style.display = 'block';
        } else {
            document.getElementById('ifOnline').style.display = 'none';
        }
    }

</script>