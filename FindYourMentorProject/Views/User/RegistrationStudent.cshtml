@model FindYourMentorProject.Models.RegisterStudent

@{
    ViewBag.Title = "Mentee Registration";
    Layout = "~/Views/Shared/_MainLayout.cshtml";
}

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css" />
<link href="~/Custom/css/Register.css" rel="stylesheet" />
<body>
    <div class="common-register">
        <div class="wrapper">

            <header>Register as Mentee</header>


            @if (ViewBag.Status != null && Convert.ToBoolean(ViewBag.Status))
            {
                if (ViewBag.Message != null)
                {
                    <div class="forgotpassword-text-success">
                        @ViewBag.Message
                    </div>
                }
            }

            @if (ViewBag.Message1 != null)
            {
                <div class="loginmsg">
                    @ViewBag.Message1
                </div>
            }

            @using (Html.BeginForm("RegistrationStudent", "User", FormMethod.Post, new { @id = "form1", @name = "register-form" }))
            {
                @Html.AntiForgeryToken()

                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                <div class="field name">
                    <div class="input-area">
                        @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "input-area-field", @placeholder = "Your Firstname", @maxLength = "50", @minLength = "3" } })
                        @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                        <i class="icon fas fa-user-circle"></i>
                    </div>
                </div>



                <div class="field name">
                    <div class="input-area">
                        @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "input-area-field", @placeholder = "Your Lastname", @maxLength = "50", @minLength = "3" } })
                        @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                        <i class="icon fas fa-user-circle"></i>
                    </div>

                </div>

                <div class="field email">
                    <div class="input-area">
                        @Html.EditorFor(model => model.EmailID, new { htmlAttributes = new { @class = "input-area-field", @placeholder = "Email Address", @type = "email" } })
                        @Html.ValidationMessageFor(model => model.EmailID, "", new { @class = "text-danger" })
                        <i class="icon fas fa-envelope"></i>
                    </div>
                </div>

                <div class="field contactno">
                    <div class="input-area">
                        @Html.EditorFor(model => model.ContactNo, new { htmlAttributes = new { @class = "input-area-field", @placeholder = "Enter Contact Number" } })
                        @Html.ValidationMessageFor(model => model.ContactNo, "", new { @class = "text-danger" })
                        <i class="icon fas fa-address-book"></i>
                    </div>
                </div>

                <div class="field Age">
                    <div class="input-area">
                        @Html.EditorFor(model => model.Age, new { htmlAttributes = new { @class = "input-area-field", @placeholder = "Enter Age", @type = "number", @min="5", @max = "85" } })
                        @Html.ValidationMessageFor(model => model.Age, "", new { @class = "text-danger" })
                        <i class="icon fas fa-user"></i>
                    </div>
                </div>

                <div class="field name">
                    <div class="input-area">
                        @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "input-area-field", @placeholder = "Your City name" } })
                        @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                        <i class="icon fas fa-city"></i>
                    </div>
                </div>

                <div class="field Address">
                    <div class="Address-field">
                        <i class="fas fa-map-marked-alt"></i>
                        @Html.TextAreaFor(model => model.Address, 4, 41, new { @placeholder = "Enter your Address", @class = "text-area-field" })
                    </div>
                    @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger textarea-valid" })
                </div>
                

                <div class="State-section">
                    <p>Select State:</p>
                    @Html.DropDownListFor(m => m.State, new SelectList(Enum.GetValues(typeof(FindYourMentorProject.Models.RegisterStudent.States))), "Select your state ..");<br />
                    @Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })
                </div>

                <div class="field Pincode">
                    <div class="input-area">
                        @Html.EditorFor(model => model.Pincode, new { htmlAttributes = new { @class = "input-area-field", @placeholder = "Enter Your Pincode"} })
                        @Html.ValidationMessageFor(model => model.Pincode, "", new { @class = "text-danger" })
                        <i class="icon fas fa-map-pin"></i>
                    </div>
                </div>

                <div class="field GitHub">
                    <div class="input-area">
                        @Html.EditorFor(model => model.GitHubID, new { htmlAttributes = new { @class = "input-area-field", @placeholder = "GitHub ID", @maxlength = "50", @minlength = "3" } })
                        @Html.ValidationMessageFor(model => model.GitHubID, "", new { @class = "text-danger" })
                        <i class="icon fas fa-user-circle"></i>
                    </div>
                </div>

                <div class="field LinkedIn">
                    <div class="input-area">
                        @Html.EditorFor(model => model.LinkedInID, new { htmlAttributes = new { @class = "input-area-field", @placeholder = "linkedIN ID", @maxlength = "50", @minlength = "3" } })
                        @Html.ValidationMessageFor(model => model.LinkedInID, "", new { @class = "text-danger" })
                        <i class="icon fas fa-user-circle"></i>
                    </div>
                </div>

                <div class="profile-upload">
                    <p>Choose Profile Picture</p>
                    <div class="profile-flex">
                        <i class="icon fas fa-user-circle" id="profile-pic"></i>
                        <input type="file" id="file" name="file">
                        <span id="remove-img" onclick="document.getElementById('file').value = ''"><i class="fas fa-times"></i></span>
                    </div>
                </div>

                <div class="Address">
                    <div class="Adress-field">
                        <i class="fas fa-book-reader"></i>
                        @Html.TextAreaFor(model => model.Description, 3, 41, new { @placeholder = "Description ...", @class = "text-area-field" });
                    </div>
                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger textarea-valid-2" })
                </div>

                <div class="field password">
                    <div class="input-area">
                        @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "input-area-field", @placeholder = "Enter Password", @id = "password1", @type = "password" } })
                        @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                        <i class="icon fas fa-lock"></i>
                        <i class="show-btn fas fa-eye" id="show-pass"></i>
                    </div>
                </div>

                <div class="field password">
                    <div class="input-area">
                        @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "input-area-field", @placeholder = "Confirm Password", @id = "password2", @type = "password" } })
                        @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                        <i class="icon fas fa-lock"></i>
                        <i class="show-btn fas fa-eye" id="show-confirm-pass"></i>
                    </div>
                </div>
            }

            <button type="submit" value="REGISTER" class="submit-field" form="form1">REGISTER</button>


            <div class="end-txt1">
                <span>Already joined?</span>
                <a href="/User/Login">Signin now</a>
            </div>

            <div class="end-txt1">
                <a href="/User/RegistrationMentor">Join as a Mentor</a>
            </div>

        </div>
    </div>


    <script src="~/Custom/js/Register.js"></script>
</body>
